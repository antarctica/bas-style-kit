---

# == Notes ==

# - GitLab automatically passes artifacts from previous stages by default
# - This configuration file uses some advanced YAML features (namely anchors) which may not be correctly displayed
#   by syntax highlighting
# - Set required secret variables at: https://gitlab.data.bas.ac.uk/web-apps/bsk/bas-style-kit/settings/ci_cd

# = Secret variables
# - Variables are grouped by section in KEY: "value" format (e.g. FOO: "bar")
#   Sensetive values are represented by "[Sensetive]"
#
# - AWS IAM id/secret keys for 'bas-gitlab-deploy-bas-style-kit' user
# > AWS_ACCESS_KEY_ID: "[Sensetive]"
# > AWS_SECRET_ACCESS_KEY: "[Sensetive]"

# == Job Templates ==

.job_template_s3_sync: &job_template_s3_sync
  image:
    name: governmentpaas/awscli:latest
    entrypoint: [""]
  before_script:
    - "export CI_BUILD_REF_SHORT=`echo $CI_BUILD_REF | cut -c1-7`"
    - "export CI_BUILD_TAG_SHORT=`echo $CI_COMMIT_TAG | cut -c 2-`"
    - "export CDN_PROJECT_VERSION=$CI_BUILD_TAG_SHORT"

# == Global settings ==

stages:
  - setup
  - build
  - lint
  - process
  # - package
  # - review
  # - deploy

image:
  name: docker-registry.data.bas.ac.uk/web-apps/bsk/bas-style-kit:0.4.0-develop-alpine
  entrypoint: [""]

variables:
  CDN_BUCKET: bas-cdn-prod
  PACKAGES_BUCKET: bas-package-service-prod
  PACKAGES_BUCKET_PATH: zips/apps
  APP_NAME: bas-style-kit
  REVIEW_APP_DOMAIN: bas-style-kit-testbed.s3-website-eu-west-1.amazonaws.com

# == Jobs ==

node-dependencies:
  stage: setup
  script:
    - "rm -rf node_modules"
    - "yarn install --frozen-lockfile"
  artifacts:
    name: "$CI_BUILD_TOKEN-dist-styles"
    paths:
      - node_modules
    expire_in: 1 hour

compile-sass:
  stage: build
  script:
      - "./node_modules/gulp/bin/gulp.js build--css"
  artifacts:
    name: "$CI_BUILD_TOKEN-dist-styles"
    paths:
      - dist/css/styles-bsk.css
      - dist/css/bootstrap-bsk.css
      - dist/css/fonts-bsk.css
      - dist/css/bas-style-kit.css
      - dist/css/bas-style-kit.min.css
    expire_in: 1 week

compile-js:
  stage: build
  script:
      - "./node_modules/gulp/bin/gulp.js build--js"
  artifacts:
    name: "$CI_BUILD_TOKEN-dist-scripts"
    paths:
      - dist/js/bas-style-kit.js
      - dist/js/bas-style-kit.min.js
    expire_in: 1 week

# compile-testbed:
#   stage: build
#   only:
#     - branches
#   before_script:
#     - "mkdir node_modules"
#     - "cp -R $NODE_PATH/bootstrap-sass node_modules/"
#   script:
#     - "gulp testbed"
#   artifacts:
#     name: "$CI_BUILD_TOKEN-testbed"
#     paths:
#       - dist/css/testbed-bsk.css
#       - testbed/rendered
#     expire_in: 1 week

copy-fonts:
  stage: build
  script:
    - "./node_modules/gulp/bin/gulp.js copy--fonts"
  artifacts:
    name: "$CI_BUILD_TOKEN-dist-fonts"
    paths:
      - dist/fonts
    expire_in: 1 week

copy-images:
  stage: build
  script:
    - "./node_modules/gulp/bin/gulp.js copy--img"
  artifacts:
    name: "$CI_BUILD_TOKEN-dist-imgs"
    paths:
      - dist/img
    expire_in: 1 week

lint-sass:
  stage: lint
  script:
    - "./node_modules/gulp/bin/gulp.js lint--scss"

lint-js:
  stage: lint
  script:
    - "./node_modules/gulp/bin/gulp.js lint--js"

compute-sri:
  stage: process
  only:
    - tags
  script:
    - "./node_modules/gulp/bin/gulp.js sri"
  artifacts:
    name: "$CI_BUILD_TOKEN-dist-sri"
    paths:
      - dist/bas-style-kit.sri.json
    expire_in: 1 week

# review:
#   stage: review
#   image:
#     name: governmentpaas/awscli:latest
#     entrypoint: [""]
#   only:
#     - branches
#   except:
#     - master
#     - tags
#   script:
#     - aws s3 sync --delete dist/ s3://bas-style-kit-testbed/$CI_BUILD_REF_NAME/dist/
#     - aws s3 sync --delete testbed/rendered/ s3://bas-style-kit-testbed/$CI_BUILD_REF_NAME/testbed/
#   environment:
#     name: review/$CI_BUILD_REF_NAME
#     url: http://bas-style-kit-testbed.s3-website-eu-west-1.amazonaws.com/$CI_BUILD_REF_NAME/testbed/index.html
#     on_stop: stop_review

# stop_review:
#   stage: review
#   image: antarctica/aws-cli-image:0.1.0-alpine-gl
#   image:
#     name: governmentpaas/awscli:latest
#     entrypoint: [""]
#   script:
#     - aws s3 rm --recursive s3://bas-style-kit-testbed/$CI_BUILD_REF_NAME
#   variables:
#     GIT_STRATEGY: none
#   when: manual
#   environment:
#     name: review/$CI_BUILD_REF_NAME
#     action: stop

# package-dist:
#   stage: package
#   image: antarctica/aws-cli-image:0.1.0-alpine-gl
#   before_script:
#     - "export CI_BUILD_REF_SHORT=`echo $CI_BUILD_REF | cut -c1-7`"
#     - "export DATETIME_INSTANT=`date --utc -Iseconds`"
#     - "cd dist"
#   script: "zip -r ../$CI_BUILD_REF_SHORT-$DATETIME_INSTANT.zip *"
#   artifacts:
#     name: "$CI_BUILD_TOKEN-zip"
#     paths:
#       - "*.zip"
#     expire_in: 1 day

# s3-snapshot-dev:
#   <<: *job_template_s3_sync
#   stage: deploy
#   only:
#     - master
#   script: "aws s3 cp $CI_BUILD_REF_SHORT-* s3://$PACKAGES_BUCKET/$PACKAGES_BUCKET_PATH/$APP_NAME/snapshots/"

# s3-cdn-dev:
#   <<: *job_template_s3_sync
#   stage: deploy
#   only:
#     - master
#   when: manual
#   script: "aws s3 sync --delete dist/ s3://$CDN_BUCKET/$APP_NAME/$CDN_PROJECT_VERSION/"

# s3-cdn-prod:
#   <<: *job_template_s3_sync
#   stage: deploy
#   only:
#     - tags
#   when: manual
#   script: "aws s3 sync --delete dist/ s3://$CDN_BUCKET/$APP_NAME/$CDN_PROJECT_VERSION/"

# s3-packages-prod:
#   <<: *job_template_s3_sync
#   stage: deploy
#   only:
#     - tags
#   when: manual
#   script: "aws s3 cp $CI_BUILD_REF_SHORT-*.zip s3://$PACKAGES_BUCKET/$PACKAGES_BUCKET_PATH/$APP_NAME/releases/$CDN_PROJECT_VERSION.zip"

# s3-testbed:
#   <<: *job_template_s3_sync
#   stage: deploy
#   only:
#     - master
#   script:
#     - aws s3 sync --delete dist/ s3://bas-style-kit-testbed/$CI_BUILD_REF_NAME/dist/
#     - aws s3 sync --delete testbed/rendered/ s3://bas-style-kit-testbed/$CI_BUILD_REF_NAME/testbed/
#   environment:
#     name: testbed-master
#     url: http://bas-style-kit-testbed.s3-website-eu-west-1.amazonaws.com/$CI_BUILD_REF_NAME/testbed/index.html
