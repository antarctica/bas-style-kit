---

# == Notes ==

# - GitLab automatically passes artifacts from previous stages by default
# - This configuration file uses some advanced YAML features (namely anchors) which may not be correctly displayed
#   by syntax highlighting
# - Set required secret variables at: https://gitlab.data.bas.ac.uk/web-apps/bsk/bas-style-kit/settings/ci_cd

# = Secret variables
# - Variables are grouped by section in KEY: "value" format (e.g. FOO: "bar")
#   Sensetive values are represented by "[Sensetive]"
#
# - AWS IAM id/secret keys for 'bas-gitlab-deploy-bas-style-kit' user
# > AWS_ACCESS_KEY_ID: "[Sensetive]"
# > AWS_SECRET_ACCESS_KEY: "[Sensetive]"

# == Job Templates ==

.job_template_s3_sync: &job_template_s3_sync
  image:
    name: governmentpaas/awscli:latest
    entrypoint: [""]
  before_script:
    - "export CI_BUILD_REF_SHORT=`echo $CI_BUILD_REF | cut -c1-7`"
    - "export CI_BUILD_TAG_SHORT=`echo $CI_COMMIT_TAG | cut -c 2-`"
    - "export CDN_PROJECT_VERSION=$CI_BUILD_TAG_SHORT"

# == Global settings ==

stages:
  - setup
  - build
  - lint
  - process
  - package
  - review
  - deploy

image:
  name: docker-registry.data.bas.ac.uk/web-apps/bsk/bas-style-kit/app:0.5.0-develop-alpine
  entrypoint: [""]

variables:
  CDN_BUCKET: cdn.web.bas.ac.uk
  PACKAGES_BUCKET: packages.data.bas.ac.uk
  PACKAGES_BUCKET_PATH: zips/apps
  TESTBED_BUCKET: style-kit-testbed.web.bas.ac.uk
  APP_NAME: bas-style-kit
  REVIEW_APP_DOMAIN: bas-style-kit-testbed.s3-website-eu-west-1.amazonaws.com

# == Jobs ==

node-dependencies-app:
  stage: setup
  script:
    - "rm -rf node_modules"
    - "yarn install --frozen-lockfile"
  artifacts:
    name: "$CI_BUILD_TOKEN-node-dependencies-app"
    paths:
      - node_modules
    expire_in: 1 hour

node-dependencies-testbed:
  stage: setup
  image:
    name: docker-registry.data.bas.ac.uk/web-apps/bsk/bas-style-kit/testbed:0.2.0-alpine
    entrypoint: [""]
  script:
    - "cd testbed"
    - "rm -rf node_modules"
    - "yarn install --frozen-lockfile"
  artifacts:
    name: "$CI_BUILD_TOKEN-node-dependencies-testbed"
    paths:
      - testbed/node_modules
    expire_in: 1 hour

compile-sass-app:
  stage: build
  script:
    - "./node_modules/gulp/bin/gulp.js build--css"
  artifacts:
    name: "$CI_BUILD_TOKEN-dist-styles-app"
    paths:
      - dist/css/styles-bsk.css
      - dist/css/bootstrap-bsk.css
      - dist/css/fonts-bsk.css
      - dist/css/bas-style-kit.css
      - dist/css/bas-style-kit.min.css
    expire_in: 1 week

compile-sass-testbed:
  stage: build
  image:
    name: docker-registry.data.bas.ac.uk/web-apps/bsk/bas-style-kit/testbed:0.2.0-alpine
    entrypoint: [""]
  before_script:
    - "export TESTBED_VERSION=$CI_BUILD_REF_NAME"
  script:
    - "cd testbed"
    - "./node_modules/gulp/bin/gulp.js build--css"
  artifacts:
    name: "$CI_BUILD_TOKEN-dist-styles-testbed"
    paths:
      - testbed/public/assets/css/
    expire_in: 1 week

compile-js-app:
  stage: build
  script:
      - "./node_modules/gulp/bin/gulp.js build--js"
  artifacts:
    name: "$CI_BUILD_TOKEN-dist-scripts-app"
    paths:
      - dist/js/bas-style-kit.js
      - dist/js/bas-style-kit.min.js
    expire_in: 1 week

compile-pug-testbed:
  stage: build
  image:
    name: docker-registry.data.bas.ac.uk/web-apps/bsk/bas-style-kit/testbed:0.2.0-alpine
    entrypoint: [""]
  before_script:
    - "export TESTBED_VERSION=$CI_BUILD_REF_NAME"
  script:
    - "cd testbed"
    - "./node_modules/gulp/bin/gulp.js build--pages"
  artifacts:
    name: "$CI_BUILD_TOKEN-dist-templates-app"
    paths:
      - testbed/public/s
      - testbed/public/p
      - testbed/public/legal
      - testbed/public/index.html
      - testbed/public/error.html
    expire_in: 1 week

copy-fonts-app:
  stage: build
  script:
    - "./node_modules/gulp/bin/gulp.js copy--fonts"
  artifacts:
    name: "$CI_BUILD_TOKEN-dist-fonts-app"
    paths:
      - dist/fonts
    expire_in: 1 week

copy-images-app:
  stage: build
  script:
    - "./node_modules/gulp/bin/gulp.js copy--img"
    - "./node_modules/gulp/bin/gulp.js generate--favicon--manifests"
  artifacts:
    name: "$CI_BUILD_TOKEN-dist-imgs-app"
    paths:
      - dist/img
    expire_in: 1 week

copy-images-testbed:
  stage: build
  image:
    name: docker-registry.data.bas.ac.uk/web-apps/bsk/bas-style-kit/testbed:0.2.0-alpine
    entrypoint: [""]
  before_script:
    - "export TESTBED_VERSION=$CI_BUILD_REF_NAME"
  script:
    - "cd testbed"
    - "./node_modules/gulp/bin/gulp.js copy--img"
  artifacts:
    name: "$CI_BUILD_TOKEN-dist-imgs-testbed"
    paths:
      - testbed/public/assets/img
    expire_in: 1 week

lint-sass-app:
  stage: lint
  script:
    - "./node_modules/gulp/bin/gulp.js lint--sass"

lint-js-app:
  stage: lint
  script:
    - "./node_modules/gulp/bin/gulp.js lint--js"

compute-sri-app:
  stage: process
  script:
    - "./node_modules/gulp/bin/gulp.js sri"
  artifacts:
    name: "$CI_BUILD_TOKEN-dist-sri"
    paths:
      - dist/bas-style-kit.sri.json
    expire_in: 1 week

review:
  <<: *job_template_s3_sync
  stage: review
  only:
    - branches
  except:
    - master
    - tags
  script:
    - aws s3 sync --delete testbed/public/ s3://$TESTBED_BUCKET/$CI_BUILD_REF_NAME/
    - aws s3 sync --delete dist/ s3://$TESTBED_BUCKET/$CI_BUILD_REF_NAME/dist/
  environment:
    name: review/$CI_BUILD_REF_NAME
    url: https://style-kit-testbed.web.bas.ac.uk/$CI_BUILD_REF_NAME/
    on_stop: stop_review

stop_review:
  <<: *job_template_s3_sync
  stage: review
  script:
    - aws s3 rm --recursive s3://$TESTBED_BUCKET/$CI_BUILD_REF_NAME
  variables:
    GIT_STRATEGY: none
  when: manual
  environment:
    name: review/$CI_BUILD_REF_NAME
    action: stop
  dependencies: []

package-app:
  stage: package
  before_script:
    - "export CI_BUILD_REF_SHORT=`echo $CI_BUILD_REF | cut -c1-7`"
    - "export DATETIME_INSTANT=`date --utc -Iseconds`"
  script:
    - "./node_modules/gulp/bin/gulp.js archive--dist"
    - "mv ./bas-style-kit.zip ./$CI_BUILD_REF_SHORT-$DATETIME_INSTANT-app.zip"
  artifacts:
    name: "$CI_BUILD_TOKEN-zip-app"
    paths:
      - "*.zip"
    expire_in: 1 week

package-testbed:
  stage: package
  image:
    name: docker-registry.data.bas.ac.uk/web-apps/bsk/bas-style-kit/testbed:0.2.0-alpine
    entrypoint: [""]
  before_script:
    - "export CI_BUILD_REF_SHORT=`echo $CI_BUILD_REF | cut -c1-7`"
    - "export DATETIME_INSTANT=`date --utc -Iseconds`"
  script:
    - "cd testbed"
    - "./node_modules/gulp/bin/gulp.js archive--public"
    - "mv ./bas-style-kit-testbed.zip ./$CI_BUILD_REF_SHORT-$DATETIME_INSTANT-testbed.zip"
  artifacts:
    name: "$CI_BUILD_TOKEN-zip-testbed"
    paths:
      - "testbed/*.zip"
    expire_in: 1 week

s3-packages-snapshot-app:
  <<: *job_template_s3_sync
  stage: deploy
  only:
    - master
  script: "aws s3 cp $CI_BUILD_REF_SHORT-*.zip s3://$PACKAGES_BUCKET/$PACKAGES_BUCKET_PATH/$APP_NAME/snapshots/"

s3-packages-snapshot-testbed:
  <<: *job_template_s3_sync
  stage: deploy
  only:
    - master
  script: "aws s3 cp testbed/$CI_BUILD_REF_SHORT-*.zip s3://$PACKAGES_BUCKET/$PACKAGES_BUCKET_PATH/$APP_NAME/snapshots/"

s3-packages-release-app:
  <<: *job_template_s3_sync
  stage: deploy
  only:
    - tags
  when: manual
  script: "aws s3 cp $CI_BUILD_REF_SHORT-*.zip s3://$PACKAGES_BUCKET/$PACKAGES_BUCKET_PATH/$APP_NAME/releases/$CDN_PROJECT_VERSION.zip"

s3-cdn-app:
  <<: *job_template_s3_sync
  stage: deploy
  only:
    - tags
  script: "aws s3 sync --delete dist/ s3://$CDN_BUCKET/$APP_NAME/$CDN_PROJECT_VERSION/"

s3-testbed:
  <<: *job_template_s3_sync
  stage: deploy
  only:
    - master
  script:
    - aws s3 sync --delete testbed/public/ s3://$TESTBED_BUCKET/$CI_BUILD_REF_NAME/
    - aws s3 sync --delete dist/ s3://$TESTBED_BUCKET/$CI_BUILD_REF_NAME/dist/
  environment:
    name: testbed
    url: https://style-kit-testbed.web.bas.ac.uk/$CI_BUILD_REF_NAME/testbed/
