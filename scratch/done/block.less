// ✘ - Not implemented - well they sort of are through the new image purchase link component but they bare no
// resemblance to these styles, candidate for PW overrides.
.img-purchase {
  position: absolute;
  width: auto !important;
  z-index: 1000;
  background-color: rgba(0,0,0,0.3);
  padding: 5px;
  border-bottom: 1px solid rgba(0,0,0,0.3);
  border-right: 1px solid rgba(0,0,0,0.3);
  border-top: 1px solid rgba(225,225,225,0.6);
  border-left: 1px solid rgba(225,225,225,0.6);
  &:hover, &:active, &:focus {
    background-color: rgba(0,0,0,0.5);
    border-bottom: 1px solid rgba(0,0,0,0.3);
    border-right: 1px solid rgba(0,0,0,0.3);
    border-top: 1px solid rgba(225,225,225,0.6);
    border-left: 1px solid rgba(225,225,225,0.6);
  }
}

// ✔︎ - Implemented as .band-bsk
.band {
  padding-top: 40px; // ✔︎ - Done as @band-bsk-padding-vertical
  padding-bottom: 40px; // ✔︎ - Done as @band-bsk-padding-vertical
  @media (max-width: 767px) {
    // ✔︎ - Implemented but using @grid-float-breakpoint-max
    padding-top: 35px;  // ✔︎ - Implemented but reduced to 20px (using @band-bsk-padding-vertical / 2) - candidate for PW overrides
    padding-bottom: 35px;  // ✔︎ - Implemented but reduced to 20px (using @band-bsk-padding-vertical / 2) - candidate for PW overrides
  }
  &.greybg {
    // ✔︎ - Implemented as .band-bsk-inverted
    background: #444; // ✔︎ - Implemented as @band-bsk-inverse-bg
    &.short-band {
      // ✔︎ - Implemented as .band-bsk-md
      padding-top: 30px; // ✔︎ - Done as @band-bsk-md-padding-vertical
      padding-bottom: 30px; // ✔︎ - Done as @band-bsk-md-padding-vertical
    }
    &.short-band-xs {
      // ✔︎ - Implemented as .band-bsk-sm
      padding-top: 10px; // ✔︎ - Done as @band-bsk-sm-padding-vertical
      padding-bottom: 10px; // ✔︎ - Done as @band-bsk-sm-padding-vertical
    }
  }
}

.standard-tabs {  // ✔︎ - Implemented as Pills rather than tabs since that's what these looked like
  ul.nav-tabs {  // Use .nav-pills-bsk to use
    li {
      padding-bottom: 0;  // ✘ - Not implemented - don't want to mess with bootstrap's layout styles unless we need to
      a {
        border-radius: 0;  // ✔︎ - As @nav-pills-bsk-border-radius
        background-color: #eee;  // ✔︎ - As @nav-pills-bsk-link-bg using @gray-lighter
        margin-right: 5px;  // ✔︎ - Implemented as @nav-pills-bsk-link-margin-right
        border: 0;  // ✘ - Not implemented - don't want to mess with bootstrap's styles unless we need to
        margin-top: 7px;  // ✘ - Not implemented - don't want to mess with bootstrap's layout styles unless we need to
      }
      a:hover, a:active, &.active a, &.active a:hover, &.active a:active, &.active a:focus {
        background-color: @blue;  // ✔︎ - Implemented as @nav-pills-bsk-active-link-hover-bg using @bsk-blue
        color: white;  // ✘ - Not implemented - already the case
        border: 0;  // ✘ - Not implemented - don't want to mess with bootstrap's styles unless we need to
      }
    }
  }
  .tab-pane {
    padding: 30px 0;
  }
}
.dl-striped {
  dt, dd {
    padding: 10px;  // ✔︎ - Implemented as .dl-bsk
  }
  dt {
    background: @lgrey;  // ✔︎ - Implemented as .dl-bsk-striped
  }
}

// ✘ - Not implemented - Too broad a selector for BSK, and we should never override bootstrap's style wholesale like this
ul {
  padding: 0 0 0 20px;
  li {
    padding-bottom: 3px;
  }
}
.nav-tabs {
  border-bottom: 0;
}
img {
  max-width: 100%;
  height: auto;
}

// ✘ - Not implemented - whilst I can see there purpose if these are needed we should modify the grid properly, as we
// hve with the XL grid size. These styles are clearly needed however so candidate for PW overrides
.cust-row {
	@media (max-width: 767px) {
		margin-left: -5px;
		margin-right: -5px;
	}
}
.cust-col-1-xs {
	@media (max-width: 767px) {
		width: 100% !important;
		padding: 15px !important;
	}
}
.cust-col-3 {
	width: 33.33%;
	float: left;
	padding: 15px;
	@media (max-width: 767px) {
		width: 50%;
		padding: 5px;
	}
}
.cust-col-2x3 {
	width: 66.66%;
	float: left;
	@media (max-width: 767px) {
		width: 50%;
		padding-left: 15px;
	}
}
.cust-col-4 {
	width: 25%;
	float: left;
	padding: 15px;
	@media (max-width: 991px) {
		width: 33.33%;
	}
	@media (max-width: 767px) {
		width: 50%;
		padding: 5px;
	}
}
.cust-col-5 {
	width: 20%;
	float: left;
	padding: 15px;
	@media (max-width: 991px) {
		width: 33.33%;
	}
	@media (max-width: 767px) {
		width: 50%;
		padding: 5px;
	}
}
.cust-col-2 {
	width: 50%;
	float: left;
	padding: 15px;
	@media (max-width: 767px) {
		width: 50%;
	}
}

// ✘ - Not implemented - I can definitely see the point of these but if needed generally I would want to extend the
// grid system more systematically to support this. I.e. using the grid mixims.
.wide-gutter-row {
  @media (min-width: 992px) {
    margin-left: -35px;
    margin-right: -35px;
  }
}
.wide-gutter-col {
  @media (min-width: 992px) {
    padding-left: 35px;
    padding-right: 35px;
  }
}

// ✘ - Not implemented - standard grid classes should be used for this - candidate for PW overrides
.pull-right-66 {
	@media (min-width: 768px) {
		width: 66.66%;
		float: right;
	}
	@media(max-width: 991px) {
		margin-left: 25px;
	}
	@media(max-width: 767px) {
		float: none;
		margin-left: 0;
		padding: 0 15px;
	}
}

// ✘ - Not implemented - not needed? Surely this can be achieved using the existing grid system
.full-width-xs {
  @media (max-width: 767px) {
    width: 100%;
  }
}

// ✘ - Not implemented - not needed? Does list-inline (or inline-list, whichever) not serve the same purpose?
.horizontal-list {
  overflow: auto;
  margin-bottom: 7px;
  li {
    float: left;
    margin-right: 30px;
  }
}

// ✘ - Not implemented - not needed, this class already exists
.dl-horizontal {
  dt {
    text-align: left;
    width: auto;
  }
}

// ✘ - Not implemented - I can see the point of these classes but they are possibly too simplistic for the BSK.
// In the same way the background-colour classes are (and so will likely be removed). These should perhaps be better
// implemented as variables, to set standard values for padding and then used in components at the BSK or individual
// project level. The use of '!important' should be reviewed if these styles are implemented in the future.
// All are candidates for PW overrides.
.padding-bottom-30 { padding-bottom: 30px !important }
.margin-top-none { margin-top: 0 !important; }
.margin-top-sm { margin-top: 10px !important; }
.margin-top-md { margin-top: 20px !important; }
.margin-top-lg { margin-top: 30px !important; }
.margin-bottom-md { margin-bottom: 15px !important; }
.margin-bottom-lg { margin-bottom: 30px !important; }
.margin-bottom-5 { margin-bottom: 5px !important; }
.margin-bottom-none { margin-bottom: 0 !important; }
.spacer {
  display: block;
  height: 40px;
}

// ✘ - Not implemented - For similar reasons to the above - single property classes should probably be added to
// components directly, especially as the need for these sorts of tweaks will be context and project dependent.
// All are candidates for PW overrides.
.relative-override { position: relative !important; }
.no-padding-list {
  li {
    padding-bottom: 0;
  }
}
.fullWidth {
  width: 100%;
}

// ✘ - Not implemented - This is too specific for the BSK and styles arbitrary elements - candidate for PW overrides
// Something similar to this has been implemented using the 'band' component however, which could be built upon.
// Candidate for PW overrides.
.std-padding-block {
	margin: 15px 0 35px;
	padding: 15px 25px;
	h3 {
		margin-top: 10px;
	}
}

// ✘ - Not implemented - This is too specific for the BSK and styles arbitrary elements - candidates for PW overrides
// Candidate for PW overrides.
.listing-grid {
  img {
    margin-bottom: 10px;
  }
  .glyphicon {
    margin-right: 7px;
  }
}
.valign {
  @media (min-width: 768px) {
    display: table;
    .col {
      display: table-cell;
      vertical-align: middle;
      float: none;
    }
  }
}

// ✘ - Not implemented - I think I know what these styles are for (creating a table without using table tags) but I
// don't think they are suitable for the BSK. Therefore candidate for PW overrides.
.tablefy-container {
  margin: 0 -10px;
}
.tablefy {
  display: table;
  width: 100%;
  border-spacing: 10px;
  .cell {
    display: table-cell;
    white-space: normal;
    float: none;
  }
  .cell.active, .cell:hover {
    background-color: @blue;
    color: white;
    -webkit-box-shadow: inset 0 3px 5px rgba(0,0,0,.05);
    box-shadow: inset 0 3px 5px rgba(0,0,0,.05);
  }
  .cell {
    background-color: darken(@lgrey, 8%);
    color: rgba(0,0,0,0.5);
    padding-top: 17px;
    padding-bottom: 17px;
    margin-top: 5px;
  }
  &.inlineBlock {
    @media (max-width: 991px) {
      .cell {
        display: inline-block;
        margin-right: 5px;
        margin-top: 5px;
        padding: 15px 8px;
      }
    }
  }
}

// ✘ - Not implemented - I think I know what these styles are for (creating some sort of wide drop-down menu) but
// without an example of this I don't think this would be suitable for the BSK yet. However I have added styles for
// dropdowns to remove rounded edges, which may be of interest. Therefore candidate for PW overrides.
.dropdown {
  &.fullWidth {
    width: 100%;
    .btn {
      width: 100%;
      text-align: left;
    }
    .dropdown-menu {
      width: 100%;
    }
    span {
      margin-top: 10px;
      float: right;
    }
  }
  .btn {
    background: white;
    color: black;
    border: 1px solid #ccc;
    font-size: 1.1em;
    .gsBook;
    span {
      margin-left: 10px;
    }
    &:hover {
      background: #eee;
      color: black;
    }
  }
}

// ✘ - Not implemented - Looks designed solely for the public website, not suitable for BSK
// All are candidates for PW overrides.
.single-meta {
	margin-bottom: 30px;
}
#latestCanvas {
  position: relative;
  .spinner {
    position: absolute;
    left: 50%;
    top: 50%;
    margin-left: -16px;
    margin-top: -16px;
  }
}
.searchpage-searchbox {
  padding: 10px 0 10px 15px;
}
.main-content {
  margin-top: 20px;
  margin-bottom: 20px;
}
