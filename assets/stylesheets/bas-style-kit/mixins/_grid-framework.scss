// Framework grid generation
//
// Used only by Bootstrap to generate the correct number of grid classes given any value of `$grid-columns`.

// 'Standard' bootstrap 12-column grid, but with an additional 'xl' size

@mixin make-grid-columns(
  $i: 1,
  $list: ".col-xs-#{$i}, .col-sm-#{$i}, .col-md-#{$i}, .col-lg-#{$i} .col-xl-#{$i}") {
  @for $i from (1 + 1) through $grid-columns {
    $list: "#{$list}, .col-xs-#{$i}, .col-sm-#{$i}, .col-md-#{$i}, .col-lg-#{$i} .col-xl-#{$i}";
  }
  #{$list} {
    position:      relative;
    // Prevent columns from collapsing when empty
    min-height:    1px;
    // Inner gutter via padding
    padding-left:  ceil(($grid-gutter-width / 2));
    padding-right: floor(($grid-gutter-width / 2));
  }
}

// 'Custom' Style kit 24-column grid, with all standard and the additional 'xl' size

@mixin make-bsk-grid-columns(
  $i: 1,
  $list: ".col-bsk-xs-#{$i}, .col-bsk-sm-#{$i}, .col-bsk-md-#{$i}, .col-bsk-lg-#{$i} .col-bsk-xl-#{$i}") {
  @for $i from (1 + 1) through $grid-bsk-columns {
    $list: "#{$list}, .col-bsk-xs-#{$i}, .col-bsk-sm-#{$i}, .col-bsk-md-#{$i}, .col-bsk-lg-#{$i} .col-bsk-xl-#{$i}";
  }
  #{$list} {
    position:      relative;
    // Prevent columns from collapsing when empty
    min-height:    1px;
    // Inner gutter via padding
    padding-left:  ceil(($grid-gutter-width / 2));
    padding-right: floor(($grid-gutter-width / 2));
  }
}

@mixin float-bsk-grid-columns(
  $class,
  $i: 1,
  $list: ".col-bsk-#{$class}-#{$i}") {
  @for $i from (1 + 1) through $grid-bsk-columns {
    $list: "#{$list}, .col-bsk-#{$class}-#{$i}";
  }
  #{$list} {
    float: left;
  }
}

@mixin calc-bsk-grid-column(
  $index,
  $class,
  $type) {
  @if ($type == width) and ($index > 0) {
    .col-bsk-#{$class}-#{$index} {
      width: percentage(($index / $grid-bsk-columns));
    }
  }
  @if ($type == push) and ($index > 0) {
    .col-bsk-#{$class}-push-#{$index} {
      left: percentage(($index / $grid-bsk-columns));
    }
  }
  @if ($type == push) and ($index == 0) {
    .col-bsk-#{$class}-push-0 {
      left: auto;
    }
  }
  @if ($type == pull) and ($index > 0) {
    .col-bsk-#{$class}-pull-#{$index} {
      right: percentage(($index / $grid-bsk-columns));
    }
  }
  @if ($type == pull) and ($index == 0) {
    .col-bsk-#{$class}-pull-0 {
      right: auto;
    }
  }
  @if ($type == offset) {
    .col-bsk-#{$class}-offset-#{$index} {
      margin-left: percentage(($index / $grid-bsk-columns));
    }
  }
}

@mixin loop-bsk-grid-columns(
  $columns,
  $class,
  $type) {
  @for $i from 0 through $columns {
    @include calc-bsk-grid-column($i, $class, $type);
  }
}

// Create grid for specific class
@mixin make-bsk-grid($class) {
  @include float-bsk-grid-columns($class);
  @include loop-bsk-grid-columns($grid-bsk-columns, $class, width);
  @include loop-bsk-grid-columns($grid-bsk-columns, $class, pull);
  @include loop-bsk-grid-columns($grid-bsk-columns, $class, push);
  @include loop-bsk-grid-columns($grid-bsk-columns, $class, offset);
}
